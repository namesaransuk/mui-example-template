{
    "sourceFile": "src/routes/MainRoutes.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 52,
            "patches": [
                {
                    "date": 1676380608853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1676393732314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,9 @@\n const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n \r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n // ==============================|| MAIN ROUTING ||============================== //\r\n \r\n const MainRoutes = {\r\n     path: '/',\r\n"
                },
                {
                    "date": 1676393739302,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: <MainLayout />,\r\n+    children: [\r\n+        {\r\n+            path: '/',\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n+            path: 'color',\r\n+            element: <Color />\r\n+        },\r\n+        {\r\n+            path: 'dashboard',\r\n+            children: [\r\n+                {\r\n+                    path: 'default',\r\n+                    element: <DashboardDefault />\r\n+                }\r\n+            ]\r\n+        },\r\n+        {\r\n+            path: 'sample-page',\r\n+            element: <SamplePage />\r\n+        },\r\n+        {\r\n+            path: 'shadow',\r\n+            element: <Shadow />\r\n+        },\r\n+        {\r\n+            path: 'typography',\r\n+            element: <Typography />\r\n+        },\r\n+        {\r\n+            path: 'icons/ant',\r\n+            element: <AntIcons />\r\n+        }\r\n+    ]\r\n+};\r\n+\r\n+export default MainRoutes;\r\n"
                },
                {
                    "date": 1676393757772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,70 +18,17 @@\n \r\n const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n // ==============================|| MAIN ROUTING ||============================== //\r\n \r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: <MainLayout />,\r\n-    children: [\r\n-        {\r\n-            path: '/',\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n-            path: 'color',\r\n-            element: <Color />\r\n-        },\r\n-        {\r\n-            path: 'dashboard',\r\n-            children: [\r\n-                {\r\n-                    path: 'default',\r\n-                    element: <DashboardDefault />\r\n-                }\r\n-            ]\r\n-        },\r\n-        {\r\n-            path: 'sample-page',\r\n-            element: <SamplePage />\r\n-        },\r\n-        {\r\n-            path: 'shadow',\r\n-            element: <Shadow />\r\n-        },\r\n-        {\r\n-            path: 'typography',\r\n-            element: <Typography />\r\n-        },\r\n-        {\r\n-            path: 'icons/ant',\r\n-            element: <AntIcons />\r\n-        }\r\n-    ]\r\n-};\r\n+function hasJWT() {\r\n+    let flag = false;\r\n \r\n-export default MainRoutes;\r\n-import { lazy } from 'react';\r\n+    //check user has JWT token\r\n+    localStorage.getItem('token') ? (flag = true) : (flag = false);\r\n \r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n+    return flag;\r\n+}\r\n \r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n const MainRoutes = {\r\n     path: '/',\r\n     element: <MainLayout />,\r\n     children: [\r\n"
                },
                {
                    "date": 1676393787694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n }\r\n \r\n const MainRoutes = {\r\n     path: '/',\r\n-    element: <MainLayout />,\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n         {\r\n             path: '/',\r\n             element: <DashboardDefault />\r\n"
                },
                {
                    "date": 1676393850455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n }\r\n \r\n const MainRoutes = {\r\n     path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    element: !hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n         {\r\n             path: '/',\r\n             element: <DashboardDefault />\r\n"
                },
                {
                    "date": 1676393871014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n }\r\n \r\n const MainRoutes = {\r\n     path: '/',\r\n-    element: !hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n         {\r\n             path: '/',\r\n             element: <DashboardDefault />\r\n"
                },
                {
                    "date": 1676393908938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,8 +22,9 @@\n function hasJWT() {\r\n     let flag = false;\r\n \r\n     //check user has JWT token\r\n+    console.log(localStorage.getItem('token'));\r\n     localStorage.getItem('token') ? (flag = true) : (flag = false);\r\n \r\n     return flag;\r\n }\r\n"
                },
                {
                    "date": 1676393959142,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n     let flag = false;\r\n \r\n     //check user has JWT token\r\n     console.log(localStorage.getItem('token'));\r\n-    localStorage.getItem('token') ? (flag = true) : (flag = false);\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n \r\n     return flag;\r\n }\r\n \r\n"
                },
                {
                    "date": 1676393966859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,8 @@\n function hasJWT() {\r\n     let flag = false;\r\n \r\n     //check user has JWT token\r\n-    console.log(localStorage.getItem('token'));\r\n     localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n \r\n     return flag;\r\n }\r\n"
                },
                {
                    "date": 1676434129251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,11 @@\n \r\n     return flag;\r\n }\r\n \r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n"
                },
                {
                    "date": 1676434318358,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: [\r\n+        {\r\n+            path: '/',\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n+            path: 'color',\r\n+            element: <Color />\r\n+        },\r\n+        {\r\n+            path: 'dashboard',\r\n+            children: [\r\n+                {\r\n+                    path: 'default',\r\n+                    element: <DashboardDefault />\r\n+                }\r\n+            ]\r\n+        },\r\n+        {\r\n+            path: 'sample-page',\r\n+            element: null\r\n+        },\r\n+        {\r\n+            path: 'shadow',\r\n+            element: <Shadow />\r\n+        },\r\n+        {\r\n+            path: 'typography',\r\n+            element: <Typography />\r\n+        },\r\n+        {\r\n+            path: 'icons/ant',\r\n+            element: <AntIcons />\r\n+        }\r\n+    ]\r\n+};\r\n+\r\n+export default MainRoutes;\r\n"
                },
                {
                    "date": 1676434323855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: [\r\n+        {\r\n+            path: '/',\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n+            path: 'color',\r\n+            element: <Color />\r\n+        },\r\n+        {\r\n+            path: 'dashboard',\r\n+            children: [\r\n+                {\r\n+                    path: 'default',\r\n+                    element: <DashboardDefault />\r\n+                }\r\n+            ]\r\n+        },\r\n+        {\r\n+            path: 'sample-page',\r\n+            element: null\r\n+        },\r\n+        {\r\n+            path: 'shadow',\r\n+            element: null\r\n+        },\r\n+        {\r\n+            path: 'typography',\r\n+            element: null\r\n+        },\r\n+        {\r\n+            path: 'icons/ant',\r\n+            element: null\r\n+        }\r\n+    ]\r\n+};\r\n+\r\n+export default MainRoutes;\r\n"
                },
                {
                    "date": 1676434365339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: [\r\n+        {\r\n+            path: '/',\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n+            path: 'color',\r\n+            element: <Color />\r\n+        },\r\n+        {\r\n+            path: 'dashboard',\r\n+            children: [\r\n+                {\r\n+                    path: 'default',\r\n+                    element: <DashboardDefault />\r\n+                }\r\n+            ]\r\n+        },\r\n+        {\r\n+            path: 'sample-page',\r\n+            element: <SamplePage />\r\n+        },\r\n+        {\r\n+            path: 'shadow',\r\n+            element: <Shadow />\r\n+        },\r\n+        {\r\n+            path: 'typography',\r\n+            element: <Typography />\r\n+        },\r\n+        {\r\n+            path: 'icons/ant',\r\n+            element: <AntIcons />\r\n+        }\r\n+    ]\r\n+};\r\n+\r\n+export default MainRoutes;\r\n"
                },
                {
                    "date": 1676435511213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,12 +29,10 @@\n }\r\n \r\n const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: [\r\n+const permistionsRole  = function name(rolesId) {\r\n+    return [\r\n         {\r\n             path: '/',\r\n             element: <DashboardDefault />\r\n         },\r\n@@ -66,228 +64,17 @@\n         {\r\n             path: 'icons/ant',\r\n             element: <AntIcons />\r\n         }\r\n-    ]\r\n-};\r\n-\r\n-export default MainRoutes;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n+    ];\r\n }\r\n \r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: [\r\n-        {\r\n-            path: '/',\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n-            path: 'color',\r\n-            element: <Color />\r\n-        },\r\n-        {\r\n-            path: 'dashboard',\r\n-            children: [\r\n-                {\r\n-                    path: 'default',\r\n-                    element: <DashboardDefault />\r\n-                }\r\n-            ]\r\n-        },\r\n-        {\r\n-            path: 'sample-page',\r\n-            element: null\r\n-        },\r\n-        {\r\n-            path: 'shadow',\r\n-            element: null\r\n-        },\r\n-        {\r\n-            path: 'typography',\r\n-            element: null\r\n-        },\r\n-        {\r\n-            path: 'icons/ant',\r\n-            element: null\r\n-        }\r\n-    ]\r\n-};\r\n \r\n-export default MainRoutes;\r\n-import { lazy } from 'react';\r\n \r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: [\r\n-        {\r\n-            path: '/',\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n-            path: 'color',\r\n-            element: <Color />\r\n-        },\r\n-        {\r\n-            path: 'dashboard',\r\n-            children: [\r\n-                {\r\n-                    path: 'default',\r\n-                    element: <DashboardDefault />\r\n-                }\r\n-            ]\r\n-        },\r\n-        {\r\n-            path: 'sample-page',\r\n-            element: null\r\n-        },\r\n-        {\r\n-            path: 'shadow',\r\n-            element: <Shadow />\r\n-        },\r\n-        {\r\n-            path: 'typography',\r\n-            element: <Typography />\r\n-        },\r\n-        {\r\n-            path: 'icons/ant',\r\n-            element: <AntIcons />\r\n-        }\r\n-    ]\r\n+    children: permistionsRole\r\n };\r\n \r\n export default MainRoutes;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-\r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: [\r\n-        {\r\n-            path: '/',\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n-            path: 'color',\r\n-            element: <Color />\r\n-        },\r\n-        {\r\n-            path: 'dashboard',\r\n-            children: [\r\n-                {\r\n-                    path: 'default',\r\n-                    element: <DashboardDefault />\r\n-                }\r\n-            ]\r\n-        },\r\n-        {\r\n-            path: 'sample-page',\r\n-            element: <SamplePage />\r\n-        },\r\n-        {\r\n-            path: 'shadow',\r\n-            element: <Shadow />\r\n-        },\r\n-        {\r\n-            path: 'typography',\r\n-            element: <Typography />\r\n-        },\r\n-        {\r\n-            path: 'icons/ant',\r\n-            element: <AntIcons />\r\n-        }\r\n-    ]\r\n-};\r\n-\r\n-export default MainRoutes;\r\n"
                },
                {
                    "date": 1676435519747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const permistionsRole = function name(rolesId) {\r\n+    return [\r\n+        {\r\n+            path: '/',\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n+            path: 'color',\r\n+            element: <Color />\r\n+        },\r\n+        {\r\n+            path: 'dashboard',\r\n+            children: [\r\n+                {\r\n+                    path: 'default',\r\n+                    element: <DashboardDefault />\r\n+                }\r\n+            ]\r\n+        },\r\n+        {\r\n+            path: 'sample-page',\r\n+            element: <SamplePage />\r\n+        },\r\n+        {\r\n+            path: 'shadow',\r\n+            element: <Shadow />\r\n+        },\r\n+        {\r\n+            path: 'typography',\r\n+            element: <Typography />\r\n+        },\r\n+        {\r\n+            path: 'icons/ant',\r\n+            element: <AntIcons />\r\n+        }\r\n+    ];\r\n+};\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: permistionsRole\r\n+};\r\n+\r\n+export default MainRoutes;\r\n"
                },
                {
                    "date": 1676435531206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n }\r\n \r\n const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n-const permistionsRole = function name(rolesId) {\r\n+const permistionsRole = function checkRoles(rolesId) {\r\n     return [\r\n         {\r\n             path: '/',\r\n             element: <DashboardDefault />\r\n@@ -74,84 +74,4 @@\n     children: permistionsRole\r\n };\r\n \r\n export default MainRoutes;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n-const permistionsRole  = function name(rolesId) {\r\n-    return [\r\n-        {\r\n-            path: '/',\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n-            path: 'color',\r\n-            element: <Color />\r\n-        },\r\n-        {\r\n-            path: 'dashboard',\r\n-            children: [\r\n-                {\r\n-                    path: 'default',\r\n-                    element: <DashboardDefault />\r\n-                }\r\n-            ]\r\n-        },\r\n-        {\r\n-            path: 'sample-page',\r\n-            element: <SamplePage />\r\n-        },\r\n-        {\r\n-            path: 'shadow',\r\n-            element: <Shadow />\r\n-        },\r\n-        {\r\n-            path: 'typography',\r\n-            element: <Typography />\r\n-        },\r\n-        {\r\n-            path: 'icons/ant',\r\n-            element: <AntIcons />\r\n-        }\r\n-    ];\r\n-}\r\n-\r\n-\r\n-\r\n-\r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: permistionsRole\r\n-};\r\n-\r\n-export default MainRoutes;\r\n"
                },
                {
                    "date": 1676435560367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n }\r\n \r\n const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n-const permistionsRole = function checkRoles(rolesId) {\r\n+const permistionsRole = function checkRoles(user) {\r\n     return [\r\n         {\r\n             path: '/',\r\n             element: <DashboardDefault />\r\n"
                },
                {
                    "date": 1676435603890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,43 +30,84 @@\n \r\n const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n const permistionsRole = function checkRoles(user) {\r\n-    return [\r\n-        {\r\n-            path: '/',\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n-            path: 'color',\r\n-            element: <Color />\r\n-        },\r\n-        {\r\n-            path: 'dashboard',\r\n-            children: [\r\n+    switch (user.rolesId) {\r\n+        case 1:\r\n+            return [\r\n                 {\r\n-                    path: 'default',\r\n+                    path: '/',\r\n                     element: <DashboardDefault />\r\n+                },\r\n+                {\r\n+                    path: 'color',\r\n+                    element: <Color />\r\n+                },\r\n+                {\r\n+                    path: 'dashboard',\r\n+                    children: [\r\n+                        {\r\n+                            path: 'default',\r\n+                            element: <DashboardDefault />\r\n+                        }\r\n+                    ]\r\n+                },\r\n+                {\r\n+                    path: 'sample-page',\r\n+                    element: <SamplePage />\r\n+                },\r\n+                {\r\n+                    path: 'shadow',\r\n+                    element: <Shadow />\r\n+                },\r\n+                {\r\n+                    path: 'typography',\r\n+                    element: <Typography />\r\n+                },\r\n+                {\r\n+                    path: 'icons/ant',\r\n+                    element: <AntIcons />\r\n                 }\r\n-            ]\r\n-        },\r\n-        {\r\n-            path: 'sample-page',\r\n-            element: <SamplePage />\r\n-        },\r\n-        {\r\n-            path: 'shadow',\r\n-            element: <Shadow />\r\n-        },\r\n-        {\r\n-            path: 'typography',\r\n-            element: <Typography />\r\n-        },\r\n-        {\r\n-            path: 'icons/ant',\r\n-            element: <AntIcons />\r\n-        }\r\n-    ];\r\n+            ];\r\n+            break;\r\n+        case 2:\r\n+            return [\r\n+                {\r\n+                    path: '/',\r\n+                    element: <DashboardDefault />\r\n+                },\r\n+                {\r\n+                    path: 'color',\r\n+                    element: <Color />\r\n+                },\r\n+                {\r\n+                    path: 'dashboard',\r\n+                    children: [\r\n+                        {\r\n+                            path: 'default',\r\n+                            element: <DashboardDefault />\r\n+                        }\r\n+                    ]\r\n+                },\r\n+                {\r\n+                    path: 'sample-page',\r\n+                    element: <SamplePage />\r\n+                },\r\n+                {\r\n+                    path: 'shadow',\r\n+                    element: <Shadow />\r\n+                },\r\n+                {\r\n+                    path: 'typography',\r\n+                    element: <Typography />\r\n+                },\r\n+                {\r\n+                    path: 'icons/ant',\r\n+                    element: <AntIcons />\r\n+                }\r\n+            ];\r\n+            break;\r\n+    }\r\n };\r\n \r\n const MainRoutes = {\r\n     path: '/',\r\n"
                },
                {
                    "date": 1676435622255,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n }\r\n \r\n const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n-const permistionsRole = function checkRoles(user) {\r\n+const permistionsRole = function checkRoles() {\r\n     switch (user.rolesId) {\r\n         case 1:\r\n             return [\r\n                 {\r\n"
                },
                {
                    "date": 1676435874557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,12 +29,12 @@\n }\r\n \r\n const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n-const permistionsRole = function checkRoles() {\r\n+const permistionsRole = [];\r\n     switch (user.rolesId) {\r\n         case 1:\r\n-            return [\r\n+            permistionsRole = [\r\n                 {\r\n                     path: '/',\r\n                     element: <DashboardDefault />\r\n                 },\r\n@@ -69,9 +69,9 @@\n                 }\r\n             ];\r\n             break;\r\n         case 2:\r\n-            return [\r\n+            permistionsRole =  [\r\n                 {\r\n                     path: '/',\r\n                     element: <DashboardDefault />\r\n                 },\r\n@@ -106,10 +106,10 @@\n                 }\r\n             ];\r\n             break;\r\n     }\r\n-};\r\n \r\n+\r\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: permistionsRole\r\n"
                },
                {
                    "date": 1676435915671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,87 +29,87 @@\n }\r\n \r\n const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n+console.log(user.rolesId);\r\n const permistionsRole = [];\r\n-    switch (user.rolesId) {\r\n-        case 1:\r\n-            permistionsRole = [\r\n-                {\r\n-                    path: '/',\r\n-                    element: <DashboardDefault />\r\n-                },\r\n-                {\r\n-                    path: 'color',\r\n-                    element: <Color />\r\n-                },\r\n-                {\r\n-                    path: 'dashboard',\r\n-                    children: [\r\n-                        {\r\n-                            path: 'default',\r\n-                            element: <DashboardDefault />\r\n-                        }\r\n-                    ]\r\n-                },\r\n-                {\r\n-                    path: 'sample-page',\r\n-                    element: <SamplePage />\r\n-                },\r\n-                {\r\n-                    path: 'shadow',\r\n-                    element: <Shadow />\r\n-                },\r\n-                {\r\n-                    path: 'typography',\r\n-                    element: <Typography />\r\n-                },\r\n-                {\r\n-                    path: 'icons/ant',\r\n-                    element: <AntIcons />\r\n-                }\r\n-            ];\r\n-            break;\r\n-        case 2:\r\n-            permistionsRole =  [\r\n-                {\r\n-                    path: '/',\r\n-                    element: <DashboardDefault />\r\n-                },\r\n-                {\r\n-                    path: 'color',\r\n-                    element: <Color />\r\n-                },\r\n-                {\r\n-                    path: 'dashboard',\r\n-                    children: [\r\n-                        {\r\n-                            path: 'default',\r\n-                            element: <DashboardDefault />\r\n-                        }\r\n-                    ]\r\n-                },\r\n-                {\r\n-                    path: 'sample-page',\r\n-                    element: <SamplePage />\r\n-                },\r\n-                {\r\n-                    path: 'shadow',\r\n-                    element: <Shadow />\r\n-                },\r\n-                {\r\n-                    path: 'typography',\r\n-                    element: <Typography />\r\n-                },\r\n-                {\r\n-                    path: 'icons/ant',\r\n-                    element: <AntIcons />\r\n-                }\r\n-            ];\r\n-            break;\r\n-    }\r\n+switch (user.rolesId) {\r\n+    case 1:\r\n+        permistionsRole = [\r\n+            {\r\n+                path: '/',\r\n+                element: <DashboardDefault />\r\n+            },\r\n+            {\r\n+                path: 'color',\r\n+                element: <Color />\r\n+            },\r\n+            {\r\n+                path: 'dashboard',\r\n+                children: [\r\n+                    {\r\n+                        path: 'default',\r\n+                        element: <DashboardDefault />\r\n+                    }\r\n+                ]\r\n+            },\r\n+            {\r\n+                path: 'sample-page',\r\n+                element: <SamplePage />\r\n+            },\r\n+            {\r\n+                path: 'shadow',\r\n+                element: <Shadow />\r\n+            },\r\n+            {\r\n+                path: 'typography',\r\n+                element: <Typography />\r\n+            },\r\n+            {\r\n+                path: 'icons/ant',\r\n+                element: <AntIcons />\r\n+            }\r\n+        ];\r\n+        break;\r\n+    case 2:\r\n+        permistionsRole = [\r\n+            {\r\n+                path: '/',\r\n+                element: <DashboardDefault />\r\n+            },\r\n+            {\r\n+                path: 'color',\r\n+                element: <Color />\r\n+            },\r\n+            {\r\n+                path: 'dashboard',\r\n+                children: [\r\n+                    {\r\n+                        path: 'default',\r\n+                        element: <DashboardDefault />\r\n+                    }\r\n+                ]\r\n+            },\r\n+            {\r\n+                path: 'sample-page',\r\n+                element: <SamplePage />\r\n+            },\r\n+            {\r\n+                path: 'shadow',\r\n+                element: <Shadow />\r\n+            },\r\n+            {\r\n+                path: 'typography',\r\n+                element: <Typography />\r\n+            },\r\n+            {\r\n+                path: 'icons/ant',\r\n+                element: <AntIcons />\r\n+            }\r\n+        ];\r\n+        break;\r\n+}\r\n \r\n-\r\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: permistionsRole\r\n"
                },
                {
                    "date": 1676435958322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,86 +29,43 @@\n }\r\n \r\n const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n-console.log(user.rolesId);\r\n-const permistionsRole = [];\r\n-switch (user.rolesId) {\r\n-    case 1:\r\n-        permistionsRole = [\r\n+const permistionsRole = [\r\n+    {\r\n+        path: '/',\r\n+        element: <DashboardDefault />\r\n+    },\r\n+    {\r\n+        path: 'color',\r\n+        element: <Color />\r\n+    },\r\n+    {\r\n+        path: 'dashboard',\r\n+        children: [\r\n             {\r\n-                path: '/',\r\n+                path: 'default',\r\n                 element: <DashboardDefault />\r\n-            },\r\n-            {\r\n-                path: 'color',\r\n-                element: <Color />\r\n-            },\r\n-            {\r\n-                path: 'dashboard',\r\n-                children: [\r\n-                    {\r\n-                        path: 'default',\r\n-                        element: <DashboardDefault />\r\n-                    }\r\n-                ]\r\n-            },\r\n-            {\r\n-                path: 'sample-page',\r\n-                element: <SamplePage />\r\n-            },\r\n-            {\r\n-                path: 'shadow',\r\n-                element: <Shadow />\r\n-            },\r\n-            {\r\n-                path: 'typography',\r\n-                element: <Typography />\r\n-            },\r\n-            {\r\n-                path: 'icons/ant',\r\n-                element: <AntIcons />\r\n             }\r\n-        ];\r\n-        break;\r\n-    case 2:\r\n-        permistionsRole = [\r\n-            {\r\n-                path: '/',\r\n-                element: <DashboardDefault />\r\n-            },\r\n-            {\r\n-                path: 'color',\r\n-                element: <Color />\r\n-            },\r\n-            {\r\n-                path: 'dashboard',\r\n-                children: [\r\n-                    {\r\n-                        path: 'default',\r\n-                        element: <DashboardDefault />\r\n-                    }\r\n-                ]\r\n-            },\r\n-            {\r\n-                path: 'sample-page',\r\n-                element: <SamplePage />\r\n-            },\r\n-            {\r\n-                path: 'shadow',\r\n-                element: <Shadow />\r\n-            },\r\n-            {\r\n-                path: 'typography',\r\n-                element: <Typography />\r\n-            },\r\n-            {\r\n-                path: 'icons/ant',\r\n-                element: <AntIcons />\r\n-            }\r\n-        ];\r\n-        break;\r\n-}\r\n+        ]\r\n+    },\r\n+    {\r\n+        path: 'sample-page',\r\n+        element: <SamplePage />\r\n+    },\r\n+    {\r\n+        path: 'shadow',\r\n+        element: <Shadow />\r\n+    },\r\n+    {\r\n+        path: 'typography',\r\n+        element: <Typography />\r\n+    },\r\n+    {\r\n+        path: 'icons/ant',\r\n+        element: <AntIcons />\r\n+    }\r\n+];\r\n \r\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n"
                },
                {
                    "date": 1676435999100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n }\r\n \r\n const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n-const permistionsRole = [\r\n+const permistionsAdmin = [\r\n     {\r\n         path: '/',\r\n         element: <DashboardDefault />\r\n     },\r\n"
                },
                {
                    "date": 1676436021138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,111 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const permistionsAdmin = [\r\n+    {\r\n+        path: '/',\r\n+        element: <DashboardDefault />\r\n+    },\r\n+    {\r\n+        path: 'color',\r\n+        element: <Color />\r\n+    },\r\n+    {\r\n+        path: 'dashboard',\r\n+        children: [\r\n+            {\r\n+                path: 'default',\r\n+                element: <DashboardDefault />\r\n+            }\r\n+        ]\r\n+    },\r\n+    {\r\n+        path: 'sample-page',\r\n+        element: <SamplePage />\r\n+    },\r\n+    {\r\n+        path: 'shadow',\r\n+        element: <Shadow />\r\n+    },\r\n+    {\r\n+        path: 'typography',\r\n+        element: <Typography />\r\n+    },\r\n+    {\r\n+        path: 'icons/ant',\r\n+        element: <AntIcons />\r\n+    }\r\n+];\r\n+\r\n+const permistionsUser = [\r\n+    {\r\n+        path: '/',\r\n+        element: <DashboardDefault />\r\n+    },\r\n+    {\r\n+        path: 'color',\r\n+        element: <Color />\r\n+    },\r\n+    {\r\n+        path: 'dashboard',\r\n+        children: [\r\n+            {\r\n+                path: 'default',\r\n+                element: <DashboardDefault />\r\n+            }\r\n+        ]\r\n+    },\r\n+    {\r\n+        path: 'sample-page',\r\n+        element: <SamplePage />\r\n+    },\r\n+    {\r\n+        path: 'shadow',\r\n+        element: <Shadow />\r\n+    },\r\n+    {\r\n+        path: 'typography',\r\n+        element: <Typography />\r\n+    },\r\n+    {\r\n+        path: 'icons/ant',\r\n+        element: <AntIcons />\r\n+    }\r\n+];\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: permistionsRole\r\n+};\r\n+\r\n+export default permistionsAdmin;\r\n"
                },
                {
                    "date": 1676436044260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const permistionsAdmin = [\r\n+    {\r\n+        path: '/',\r\n+        element: <DashboardDefault />\r\n+    },\r\n+    {\r\n+        path: 'color',\r\n+        element: <Color />\r\n+    },\r\n+    {\r\n+        path: 'dashboard',\r\n+        children: [\r\n+            {\r\n+                path: 'default',\r\n+                element: <DashboardDefault />\r\n+            }\r\n+        ]\r\n+    },\r\n+    {\r\n+        path: 'sample-page',\r\n+        element: <SamplePage />\r\n+    },\r\n+    {\r\n+        path: 'shadow',\r\n+        element: <Shadow />\r\n+    },\r\n+    {\r\n+        path: 'typography',\r\n+        element: <Typography />\r\n+    },\r\n+    {\r\n+        path: 'icons/ant',\r\n+        element: <AntIcons />\r\n+    }\r\n+];\r\n+\r\n+const permistionsUser = [\r\n+    {\r\n+        path: '/',\r\n+        element: <DashboardDefault />\r\n+    },\r\n+    {\r\n+        path: 'dashboard',\r\n+        children: [\r\n+            {\r\n+                path: 'default',\r\n+                element: <DashboardDefault />\r\n+            }\r\n+        ]\r\n+    }\r\n+];\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: permistionsRole\r\n+};\r\n+\r\n+export default permistionsAdmin;\r\n"
                },
                {
                    "date": 1676436074476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const permistionsAdmin = [\r\n+    {\r\n+        path: '/',\r\n+        element: <DashboardDefault />\r\n+    },\r\n+    {\r\n+        path: 'color',\r\n+        element: <Color />\r\n+    },\r\n+    {\r\n+        path: 'dashboard',\r\n+        children: [\r\n+            {\r\n+                path: 'default',\r\n+                element: <DashboardDefault />\r\n+            }\r\n+        ]\r\n+    },\r\n+    {\r\n+        path: 'sample-page',\r\n+        element: <SamplePage />\r\n+    },\r\n+    {\r\n+        path: 'shadow',\r\n+        element: <Shadow />\r\n+    },\r\n+    {\r\n+        path: 'typography',\r\n+        element: <Typography />\r\n+    },\r\n+    {\r\n+        path: 'icons/ant',\r\n+        element: <AntIcons />\r\n+    }\r\n+];\r\n+\r\n+const permistionsUser = [\r\n+    {\r\n+        path: '/',\r\n+        element: <DashboardDefault />\r\n+    },\r\n+    {\r\n+        path: 'dashboard',\r\n+        children: [\r\n+            {\r\n+                path: 'default',\r\n+                element: <DashboardDefault />\r\n+            }\r\n+        ]\r\n+    }\r\n+];\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: permistionsAdmin\r\n+};\r\n+\r\n+export default MainRoutes;\r\n"
                },
                {
                    "date": 1676436124079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: [\r\n+        {\r\n+            path: '/',\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n+            path: 'color',\r\n+            element: <Color />\r\n+        },\r\n+        {\r\n+            path: 'dashboard',\r\n+            children: [\r\n+                {\r\n+                    path: 'default',\r\n+                    element: <DashboardDefault />\r\n+                }\r\n+            ]\r\n+        },\r\n+        {\r\n+            path: 'sample-page',\r\n+            element: <SamplePage />\r\n+        },\r\n+        {\r\n+            path: 'shadow',\r\n+            element: <Shadow />\r\n+        },\r\n+        {\r\n+            path: 'typography',\r\n+            element: <Typography />\r\n+        },\r\n+        {\r\n+            path: 'icons/ant',\r\n+            element: <AntIcons />\r\n+        }\r\n+    ]\r\n+};\r\n+\r\n+export default MainRoutes;\r\n"
                },
                {
                    "date": 1676436345548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,24 +27,27 @@\n \r\n     return flag;\r\n }\r\n \r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n+// const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n         {\r\n             path: '/',\r\n+            role: 1,\r\n             element: <DashboardDefault />\r\n         },\r\n         {\r\n             path: 'color',\r\n+            role: 1,\r\n             element: <Color />\r\n         },\r\n         {\r\n             path: 'dashboard',\r\n+            role: 1,\r\n             children: [\r\n                 {\r\n                     path: 'default',\r\n                     element: <DashboardDefault />\r\n@@ -52,390 +55,26 @@\n             ]\r\n         },\r\n         {\r\n             path: 'sample-page',\r\n+            role: 1,\r\n             element: <SamplePage />\r\n         },\r\n         {\r\n             path: 'shadow',\r\n+            role: 1,\r\n             element: <Shadow />\r\n         },\r\n         {\r\n             path: 'typography',\r\n+            role: 1,\r\n             element: <Typography />\r\n         },\r\n         {\r\n             path: 'icons/ant',\r\n+            role: 1,\r\n             element: <AntIcons />\r\n         }\r\n     ]\r\n };\r\n \r\n export default MainRoutes;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n-const permistionsAdmin = [\r\n-    {\r\n-        path: '/',\r\n-        element: <DashboardDefault />\r\n-    },\r\n-    {\r\n-        path: 'color',\r\n-        element: <Color />\r\n-    },\r\n-    {\r\n-        path: 'dashboard',\r\n-        children: [\r\n-            {\r\n-                path: 'default',\r\n-                element: <DashboardDefault />\r\n-            }\r\n-        ]\r\n-    },\r\n-    {\r\n-        path: 'sample-page',\r\n-        element: <SamplePage />\r\n-    },\r\n-    {\r\n-        path: 'shadow',\r\n-        element: <Shadow />\r\n-    },\r\n-    {\r\n-        path: 'typography',\r\n-        element: <Typography />\r\n-    },\r\n-    {\r\n-        path: 'icons/ant',\r\n-        element: <AntIcons />\r\n-    }\r\n-];\r\n-\r\n-const permistionsUser = [\r\n-    {\r\n-        path: '/',\r\n-        element: <DashboardDefault />\r\n-    },\r\n-    {\r\n-        path: 'dashboard',\r\n-        children: [\r\n-            {\r\n-                path: 'default',\r\n-                element: <DashboardDefault />\r\n-            }\r\n-        ]\r\n-    }\r\n-];\r\n-\r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: permistionsAdmin\r\n-};\r\n-\r\n-export default MainRoutes;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n-const permistionsAdmin = [\r\n-    {\r\n-        path: '/',\r\n-        element: <DashboardDefault />\r\n-    },\r\n-    {\r\n-        path: 'color',\r\n-        element: <Color />\r\n-    },\r\n-    {\r\n-        path: 'dashboard',\r\n-        children: [\r\n-            {\r\n-                path: 'default',\r\n-                element: <DashboardDefault />\r\n-            }\r\n-        ]\r\n-    },\r\n-    {\r\n-        path: 'sample-page',\r\n-        element: <SamplePage />\r\n-    },\r\n-    {\r\n-        path: 'shadow',\r\n-        element: <Shadow />\r\n-    },\r\n-    {\r\n-        path: 'typography',\r\n-        element: <Typography />\r\n-    },\r\n-    {\r\n-        path: 'icons/ant',\r\n-        element: <AntIcons />\r\n-    }\r\n-];\r\n-\r\n-const permistionsUser = [\r\n-    {\r\n-        path: '/',\r\n-        element: <DashboardDefault />\r\n-    },\r\n-    {\r\n-        path: 'dashboard',\r\n-        children: [\r\n-            {\r\n-                path: 'default',\r\n-                element: <DashboardDefault />\r\n-            }\r\n-        ]\r\n-    }\r\n-];\r\n-\r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: permistionsRole\r\n-};\r\n-\r\n-export default permistionsAdmin;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n-const permistionsAdmin = [\r\n-    {\r\n-        path: '/',\r\n-        element: <DashboardDefault />\r\n-    },\r\n-    {\r\n-        path: 'color',\r\n-        element: <Color />\r\n-    },\r\n-    {\r\n-        path: 'dashboard',\r\n-        children: [\r\n-            {\r\n-                path: 'default',\r\n-                element: <DashboardDefault />\r\n-            }\r\n-        ]\r\n-    },\r\n-    {\r\n-        path: 'sample-page',\r\n-        element: <SamplePage />\r\n-    },\r\n-    {\r\n-        path: 'shadow',\r\n-        element: <Shadow />\r\n-    },\r\n-    {\r\n-        path: 'typography',\r\n-        element: <Typography />\r\n-    },\r\n-    {\r\n-        path: 'icons/ant',\r\n-        element: <AntIcons />\r\n-    }\r\n-];\r\n-\r\n-const permistionsUser = [\r\n-    {\r\n-        path: '/',\r\n-        element: <DashboardDefault />\r\n-    },\r\n-    {\r\n-        path: 'color',\r\n-        element: <Color />\r\n-    },\r\n-    {\r\n-        path: 'dashboard',\r\n-        children: [\r\n-            {\r\n-                path: 'default',\r\n-                element: <DashboardDefault />\r\n-            }\r\n-        ]\r\n-    },\r\n-    {\r\n-        path: 'sample-page',\r\n-        element: <SamplePage />\r\n-    },\r\n-    {\r\n-        path: 'shadow',\r\n-        element: <Shadow />\r\n-    },\r\n-    {\r\n-        path: 'typography',\r\n-        element: <Typography />\r\n-    },\r\n-    {\r\n-        path: 'icons/ant',\r\n-        element: <AntIcons />\r\n-    }\r\n-];\r\n-\r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: permistionsRole\r\n-};\r\n-\r\n-export default permistionsAdmin;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n-const permistionsAdmin = [\r\n-    {\r\n-        path: '/',\r\n-        element: <DashboardDefault />\r\n-    },\r\n-    {\r\n-        path: 'color',\r\n-        element: <Color />\r\n-    },\r\n-    {\r\n-        path: 'dashboard',\r\n-        children: [\r\n-            {\r\n-                path: 'default',\r\n-                element: <DashboardDefault />\r\n-            }\r\n-        ]\r\n-    },\r\n-    {\r\n-        path: 'sample-page',\r\n-        element: <SamplePage />\r\n-    },\r\n-    {\r\n-        path: 'shadow',\r\n-        element: <Shadow />\r\n-    },\r\n-    {\r\n-        path: 'typography',\r\n-        element: <Typography />\r\n-    },\r\n-    {\r\n-        path: 'icons/ant',\r\n-        element: <AntIcons />\r\n-    }\r\n-];\r\n-\r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: permistionsRole\r\n-};\r\n-\r\n-export default MainRoutes;\r\n"
                },
                {
                    "date": 1676436541625,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,19 +35,19 @@\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n         {\r\n             path: '/',\r\n-            role: 1,\r\n+            role: [1,2],\r\n             element: <DashboardDefault />\r\n         },\r\n         {\r\n             path: 'color',\r\n-            role: 1,\r\n+            role: [1],\r\n             element: <Color />\r\n         },\r\n         {\r\n             path: 'dashboard',\r\n-            role: 1,\r\n+            role: [1,2],\r\n             children: [\r\n                 {\r\n                     path: 'default',\r\n                     element: <DashboardDefault />\r\n@@ -55,24 +55,24 @@\n             ]\r\n         },\r\n         {\r\n             path: 'sample-page',\r\n-            role: 1,\r\n+            role: [1],\r\n             element: <SamplePage />\r\n         },\r\n         {\r\n             path: 'shadow',\r\n-            role: 1,\r\n+            role: [1],\r\n             element: <Shadow />\r\n         },\r\n         {\r\n             path: 'typography',\r\n-            role: 1,\r\n+            role: [1],\r\n             element: <Typography />\r\n         },\r\n         {\r\n             path: 'icons/ant',\r\n-            role: 1,\r\n+            role: [1],\r\n             element: <AntIcons />\r\n         }\r\n     ]\r\n };\r\n"
                },
                {
                    "date": 1676436579611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+// const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: [\r\n+        {\r\n+            path: '/',\r\n+            role: 1,\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n+            path: 'color',\r\n+            role: 1,\r\n+            element: <Color />\r\n+        },\r\n+        {\r\n+            path: 'dashboard',\r\n+            role: 1,\r\n+            children: [\r\n+                {\r\n+                    path: 'default',\r\n+                    element: <DashboardDefault />\r\n+                }\r\n+            ]\r\n+        },\r\n+        {\r\n+            path: 'sample-page',\r\n+            role: 1,\r\n+            element: <SamplePage />\r\n+        },\r\n+        {\r\n+            path: 'shadow',\r\n+            role: 1,\r\n+            element: <Shadow />\r\n+        },\r\n+        {\r\n+            path: 'typography',\r\n+            role: 1,\r\n+            element: <Typography />\r\n+        },\r\n+        {\r\n+            path: 'icons/ant',\r\n+            role: 1,\r\n+            element: <AntIcons />\r\n+        }\r\n+    ]\r\n+};\r\n+\r\n+export default MainRoutes;\r\n"
                },
                {
                    "date": 1676436590628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,27 +27,25 @@\n \r\n     return flag;\r\n }\r\n \r\n-// const user = JSON.parse(localStorage.getItem('user'));\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n         {\r\n             path: '/',\r\n-            role: 1,\r\n+            role: '/',\r\n             element: <DashboardDefault />\r\n         },\r\n         {\r\n             path: 'color',\r\n-            role: 1,\r\n             element: <Color />\r\n         },\r\n         {\r\n             path: 'dashboard',\r\n-            role: 1,\r\n             children: [\r\n                 {\r\n                     path: 'default',\r\n                     element: <DashboardDefault />\r\n@@ -55,106 +53,22 @@\n             ]\r\n         },\r\n         {\r\n             path: 'sample-page',\r\n-            role: 1,\r\n             element: <SamplePage />\r\n         },\r\n         {\r\n             path: 'shadow',\r\n-            role: 1,\r\n             element: <Shadow />\r\n         },\r\n         {\r\n             path: 'typography',\r\n-            role: 1,\r\n             element: <Typography />\r\n         },\r\n         {\r\n             path: 'icons/ant',\r\n-            role: 1,\r\n             element: <AntIcons />\r\n         }\r\n     ]\r\n };\r\n \r\n export default MainRoutes;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-// const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: [\r\n-        {\r\n-            path: '/',\r\n-            role: [1,2],\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n-            path: 'color',\r\n-            role: [1],\r\n-            element: <Color />\r\n-        },\r\n-        {\r\n-            path: 'dashboard',\r\n-            role: [1,2],\r\n-            children: [\r\n-                {\r\n-                    path: 'default',\r\n-                    element: <DashboardDefault />\r\n-                }\r\n-            ]\r\n-        },\r\n-        {\r\n-            path: 'sample-page',\r\n-            role: [1],\r\n-            element: <SamplePage />\r\n-        },\r\n-        {\r\n-            path: 'shadow',\r\n-            role: [1],\r\n-            element: <Shadow />\r\n-        },\r\n-        {\r\n-            path: 'typography',\r\n-            role: [1],\r\n-            element: <Typography />\r\n-        },\r\n-        {\r\n-            path: 'icons/ant',\r\n-            role: [1],\r\n-            element: <AntIcons />\r\n-        }\r\n-    ]\r\n-};\r\n-\r\n-export default MainRoutes;\r\n"
                },
                {
                    "date": 1676436635409,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,25 +27,27 @@\n \r\n     return flag;\r\n }\r\n \r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n+// const user = JSON.parse(localStorage.getItem('user'));\r\n \r\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n         {\r\n             path: '/',\r\n-            role: '/',\r\n+            role: [1, 2],\r\n             element: <DashboardDefault />\r\n         },\r\n         {\r\n             path: 'color',\r\n+            role: [1],\r\n             element: <Color />\r\n         },\r\n         {\r\n             path: 'dashboard',\r\n+            role: [1, 2],\r\n             children: [\r\n                 {\r\n                     path: 'default',\r\n                     element: <DashboardDefault />\r\n@@ -53,20 +55,24 @@\n             ]\r\n         },\r\n         {\r\n             path: 'sample-page',\r\n+            role: [1],\r\n             element: <SamplePage />\r\n         },\r\n         {\r\n             path: 'shadow',\r\n+            role: [1],\r\n             element: <Shadow />\r\n         },\r\n         {\r\n             path: 'typography',\r\n+            role: [1],\r\n             element: <Typography />\r\n         },\r\n         {\r\n             path: 'icons/ant',\r\n+            role: [1],\r\n             element: <AntIcons />\r\n         }\r\n     ]\r\n };\r\n"
                },
                {
                    "date": 1676439100309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,5 +76,13 @@\n         }\r\n     ]\r\n };\r\n \r\n+\r\n+const filteredRoutes = MainRoutes.filter((route) =>\r\n+    route.children ? route.children.some((child) => child.role.includes(1)) : route.role.includes(1)\r\n+);\r\n+\r\n+console.log(filteredRoutes);\r\n+\r\n+\r\n export default MainRoutes;\r\n"
                },
                {
                    "date": 1676439119121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+// const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: [\r\n+        {\r\n+            path: '/',\r\n+            role: [1, 2],\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n+            path: 'color',\r\n+            role: [1],\r\n+            element: <Color />\r\n+        },\r\n+        {\r\n+            path: 'dashboard',\r\n+            role: [1, 2],\r\n+            children: [\r\n+                {\r\n+                    path: 'default',\r\n+                    element: <DashboardDefault />\r\n+                }\r\n+            ]\r\n+        },\r\n+        {\r\n+            path: 'sample-page',\r\n+            role: [1],\r\n+            element: <SamplePage />\r\n+        },\r\n+        {\r\n+            path: 'shadow',\r\n+            role: [1],\r\n+            element: <Shadow />\r\n+        },\r\n+        {\r\n+            path: 'typography',\r\n+            role: [1],\r\n+            element: <Typography />\r\n+        },\r\n+        {\r\n+            path: 'icons/ant',\r\n+            role: [1],\r\n+            element: <AntIcons />\r\n+        }\r\n+    ]\r\n+};\r\n+\r\n+const filteredRoutes = MainRoutes.filter((route) =>\r\n+    route.children ? route.children.some((child) => child.role.includes(1)) : route.role.includes(1)\r\n+);\r\n+\r\n+console.log(filteredRoutes);\r\n+\r\n+export default filteredRoutes;\r\n"
                },
                {
                    "date": 1676440880955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import { lazy } from 'react';\r\n+\r\n+// project import\r\n+import Loadable from 'components/Loadable';\r\n+import MainLayout from 'layout/MainLayout';\r\n+\r\n+// render - dashboard\r\n+const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n+\r\n+// render - sample page\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n+// render - utilities\r\n+const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n+const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n+const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n+const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n+\r\n+const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+// ==============================|| MAIN ROUTING ||============================== //\r\n+\r\n+function hasJWT() {\r\n+    let flag = false;\r\n+\r\n+    //check user has JWT token\r\n+    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n+\r\n+    return flag;\r\n+}\r\n+\r\n+const user = JSON.parse(localStorage.getItem('user'));\r\n+\r\n+const MainRoutes = {\r\n+    path: '/',\r\n+    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n+    children: [\r\n+        {\r\n+            path: '/',\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n+            path: 'color',\r\n+            element: <Color />\r\n+        },\r\n+        {\r\n+            path: 'dashboard',\r\n+            children: [\r\n+                {\r\n+                    path: 'default',\r\n+                    element: <DashboardDefault />\r\n+                }\r\n+            ]\r\n+        },\r\n+        {\r\n+            path: 'sample-page',\r\n+            element: <SamplePage />\r\n+        },\r\n+        {\r\n+            path: 'shadow',\r\n+            element: <Shadow />\r\n+        },\r\n+        {\r\n+            path: 'typography',\r\n+            element: <Typography />\r\n+        },\r\n+        {\r\n+            path: 'icons/ant',\r\n+            element: <AntIcons />\r\n+        }\r\n+    ]\r\n+};\r\n+\r\n+export default MainRoutes;\r\n"
                },
                {
                    "date": 1676441179276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n         {\r\n-            path: '/',\r\n+            path: '/Addmin',\r\n             element: <DashboardDefault />\r\n         },\r\n         {\r\n             path: 'color',\r\n@@ -70,178 +70,4 @@\n     ]\r\n };\r\n \r\n export default MainRoutes;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-// const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: [\r\n-        {\r\n-            path: '/',\r\n-            role: [1, 2],\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n-            path: 'color',\r\n-            role: [1],\r\n-            element: <Color />\r\n-        },\r\n-        {\r\n-            path: 'dashboard',\r\n-            role: [1, 2],\r\n-            children: [\r\n-                {\r\n-                    path: 'default',\r\n-                    element: <DashboardDefault />\r\n-                }\r\n-            ]\r\n-        },\r\n-        {\r\n-            path: 'sample-page',\r\n-            role: [1],\r\n-            element: <SamplePage />\r\n-        },\r\n-        {\r\n-            path: 'shadow',\r\n-            role: [1],\r\n-            element: <Shadow />\r\n-        },\r\n-        {\r\n-            path: 'typography',\r\n-            role: [1],\r\n-            element: <Typography />\r\n-        },\r\n-        {\r\n-            path: 'icons/ant',\r\n-            role: [1],\r\n-            element: <AntIcons />\r\n-        }\r\n-    ]\r\n-};\r\n-\r\n-const filteredRoutes = MainRoutes.filter((route) =>\r\n-    route.children ? route.children.some((child) => child.role.includes(1)) : route.role.includes(1)\r\n-);\r\n-\r\n-console.log(filteredRoutes);\r\n-\r\n-export default filteredRoutes;\r\n-import { lazy } from 'react';\r\n-\r\n-// project import\r\n-import Loadable from 'components/Loadable';\r\n-import MainLayout from 'layout/MainLayout';\r\n-\r\n-// render - dashboard\r\n-const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n-\r\n-// render - sample page\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n-\r\n-// render - utilities\r\n-const Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\n-const Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\n-const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n-const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n-\r\n-const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n-// ==============================|| MAIN ROUTING ||============================== //\r\n-\r\n-function hasJWT() {\r\n-    let flag = false;\r\n-\r\n-    //check user has JWT token\r\n-    localStorage.getItem('accessToken') ? (flag = true) : (flag = false);\r\n-\r\n-    return flag;\r\n-}\r\n-\r\n-// const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n-const MainRoutes = {\r\n-    path: '/',\r\n-    element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n-    children: [\r\n-        {\r\n-            path: '/',\r\n-            role: [1, 2],\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n-            path: 'color',\r\n-            role: [1],\r\n-            element: <Color />\r\n-        },\r\n-        {\r\n-            path: 'dashboard',\r\n-            role: [1, 2],\r\n-            children: [\r\n-                {\r\n-                    path: 'default',\r\n-                    element: <DashboardDefault />\r\n-                }\r\n-            ]\r\n-        },\r\n-        {\r\n-            path: 'sample-page',\r\n-            role: [1],\r\n-            element: <SamplePage />\r\n-        },\r\n-        {\r\n-            path: 'shadow',\r\n-            role: [1],\r\n-            element: <Shadow />\r\n-        },\r\n-        {\r\n-            path: 'typography',\r\n-            role: [1],\r\n-            element: <Typography />\r\n-        },\r\n-        {\r\n-            path: 'icons/ant',\r\n-            role: [1],\r\n-            element: <AntIcons />\r\n-        }\r\n-    ]\r\n-};\r\n-\r\n-\r\n-const filteredRoutes = MainRoutes.filter((route) =>\r\n-    route.children ? route.children.some((child) => child.role.includes(1)) : route.role.includes(1)\r\n-);\r\n-\r\n-console.log(filteredRoutes);\r\n-\r\n-\r\n-export default MainRoutes;\r\n"
                },
                {
                    "date": 1676441235639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,9 +34,9 @@\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n         {\r\n-            path: '/Addmin',\r\n+            path: '/',\r\n             element: <DashboardDefault />\r\n         },\r\n         {\r\n             path: 'color',\r\n"
                },
                {
                    "date": 1676441251663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n             path: 'shadow',\r\n             element: <Shadow />\r\n         },\r\n         {\r\n-            path: 'typography',\r\n+            path: 'Admin/typography',\r\n             element: <Typography />\r\n         },\r\n         {\r\n             path: 'icons/ant',\r\n"
                },
                {
                    "date": 1676441276889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n             path: 'shadow',\r\n             element: <Shadow />\r\n         },\r\n         {\r\n-            path: 'Admin/typography',\r\n+            path: 'typography',\r\n             element: <Typography />\r\n         },\r\n         {\r\n             path: 'icons/ant',\r\n"
                },
                {
                    "date": 1676441285536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n             path: 'shadow',\r\n             element: <Shadow />\r\n         },\r\n         {\r\n-            path: 'typography',\r\n+            path: 'Admin/typography',\r\n             element: <Typography />\r\n         },\r\n         {\r\n             path: 'icons/ant',\r\n"
                },
                {
                    "date": 1676441321820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n             path: 'shadow',\r\n             element: <Shadow />\r\n         },\r\n         {\r\n-            path: 'Admin/typography',\r\n+            path: 'typography',\r\n             element: <Typography />\r\n         },\r\n         {\r\n             path: 'icons/ant',\r\n"
                },
                {
                    "date": 1676443197450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,13 +33,10 @@\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n+\r\n         {\r\n-            path: '/',\r\n-            element: <DashboardDefault />\r\n-        },\r\n-        {\r\n             path: 'color',\r\n             element: <Color />\r\n         },\r\n         {\r\n"
                },
                {
                    "date": 1676443203728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,10 +33,13 @@\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n-\r\n         {\r\n+            path: '/',\r\n+            element: <DashboardDefault />\r\n+        },\r\n+        {\r\n             path: 'color',\r\n             element: <Color />\r\n         },\r\n         {\r\n@@ -56,12 +59,8 @@\n             path: 'shadow',\r\n             element: <Shadow />\r\n         },\r\n         {\r\n-            path: 'typography',\r\n-            element: <Typography />\r\n-        },\r\n-        {\r\n             path: 'icons/ant',\r\n             element: <AntIcons />\r\n         }\r\n     ]\r\n"
                },
                {
                    "date": 1676443211658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,8 +59,12 @@\n             path: 'shadow',\r\n             element: <Shadow />\r\n         },\r\n         {\r\n+            path: 'typography',\r\n+            element: <Typography />\r\n+        },\r\n+        {\r\n             path: 'icons/ant',\r\n             element: <AntIcons />\r\n         }\r\n     ]\r\n"
                },
                {
                    "date": 1676445701196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,8 @@\n \r\n     return flag;\r\n }\r\n \r\n-const user = JSON.parse(localStorage.getItem('user'));\r\n-\r\n const MainRoutes = {\r\n     path: '/',\r\n     element: hasJWT() ? <MainLayout /> : <AuthLogin />,\r\n     children: [\r\n"
                },
                {
                    "date": 1676448545825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,8 +16,12 @@\n const Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\n const AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n \r\n const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n+\r\n+// render - EditProfile\r\n+const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+\r\n // ==============================|| MAIN ROUTING ||============================== //\r\n \r\n function hasJWT() {\r\n     let flag = false;\r\n"
                },
                {
                    "date": 1676448575740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n \r\n const AuthLogin = Loadable(lazy(() => import('pages/authentication/Login')));\r\n \r\n // render - EditProfile\r\n-const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n+const EditProfile = Loadable(lazy(() => import('pages/user-management/EditProfile')));\r\n \r\n // ==============================|| MAIN ROUTING ||============================== //\r\n \r\n function hasJWT() {\r\n"
                },
                {
                    "date": 1676448640334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,8 +67,12 @@\n         },\r\n         {\r\n             path: 'icons/ant',\r\n             element: <AntIcons />\r\n+        },\r\n+        {\r\n+            path: 'EditProfile',\r\n+            element: <EditProfile />\r\n         }\r\n     ]\r\n };\r\n \r\n"
                },
                {
                    "date": 1676533908788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,10 @@\n \r\n // render - dashboard\r\n const DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n \r\n+const AdminDefault = Loadable(lazy(() => import('pages/addminmm')));\r\n+\r\n // render - sample page\r\n const SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n \r\n // render - utilities\r\n"
                },
                {
                    "date": 1676533968405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,8 +73,12 @@\n         },\r\n         {\r\n             path: 'EditProfile',\r\n             element: <EditProfile />\r\n+        },\r\n+        {\r\n+            path: 'usersManagement',\r\n+            element: <AdminDefault />\r\n         }\r\n     ]\r\n };\r\n \r\n"
                },
                {
                    "date": 1676533996934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n             path: 'EditProfile',\r\n             element: <EditProfile />\r\n         },\r\n         {\r\n-            path: 'usersManagement',\r\n+            path: 'EsersManagement',\r\n             element: <AdminDefault />\r\n         }\r\n     ]\r\n };\r\n"
                },
                {
                    "date": 1676607193114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n             path: 'EditProfile',\r\n             element: <EditProfile />\r\n         },\r\n         {\r\n-            path: 'EsersManagement',\r\n+            path: 'UsersManagement',\r\n             element: <AdminDefault />\r\n         }\r\n     ]\r\n };\r\n"
                }
            ],
            "date": 1676380608853,
            "name": "Commit-0",
            "content": "import { lazy } from 'react';\r\n\r\n// project import\r\nimport Loadable from 'components/Loadable';\r\nimport MainLayout from 'layout/MainLayout';\r\n\r\n// render - dashboard\r\nconst DashboardDefault = Loadable(lazy(() => import('pages/dashboard')));\r\n\r\n// render - sample page\r\nconst SamplePage = Loadable(lazy(() => import('pages/extra-pages/SamplePage')));\r\n\r\n// render - utilities\r\nconst Typography = Loadable(lazy(() => import('pages/components-overview/Typography')));\r\nconst Color = Loadable(lazy(() => import('pages/components-overview/Color')));\r\nconst Shadow = Loadable(lazy(() => import('pages/components-overview/Shadow')));\r\nconst AntIcons = Loadable(lazy(() => import('pages/components-overview/AntIcons')));\r\n\r\n// ==============================|| MAIN ROUTING ||============================== //\r\n\r\nconst MainRoutes = {\r\n    path: '/',\r\n    element: <MainLayout />,\r\n    children: [\r\n        {\r\n            path: '/',\r\n            element: <DashboardDefault />\r\n        },\r\n        {\r\n            path: 'color',\r\n            element: <Color />\r\n        },\r\n        {\r\n            path: 'dashboard',\r\n            children: [\r\n                {\r\n                    path: 'default',\r\n                    element: <DashboardDefault />\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            path: 'sample-page',\r\n            element: <SamplePage />\r\n        },\r\n        {\r\n            path: 'shadow',\r\n            element: <Shadow />\r\n        },\r\n        {\r\n            path: 'typography',\r\n            element: <Typography />\r\n        },\r\n        {\r\n            path: 'icons/ant',\r\n            element: <AntIcons />\r\n        }\r\n    ]\r\n};\r\n\r\nexport default MainRoutes;\r\n"
        }
    ]
}